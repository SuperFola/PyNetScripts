#!/usr/bin/env python3

from scapy.all import *
import socket
from time import sleep, time
import re
import os


re_ip = r"[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"
sample_interval = 5  # how long to capture traffic, in seconds


def clear():
    if os.name == 'nt':
        os.system('cls')
    else:
        os.system('clear')


def main(interface="eth0", ipfilter=re_ip,
         gethostname=True, pool_interval=-1):
    while True:
        ipfilter = re.compile(ipfilter)
        traffic = {}

        # return human readable units given bytes
        def human(num):
            for x in ['bytes', 'KB', 'MB', 'GB', 'TB']:
                if num < 1024.0:
                    return f"{num / sample_interval:3.1f} {x}/sec"
                num /= 1024.0

        # callback function to process each packet
        # get total packets for each source->destination combo
        def traffic_monitor_callbak(pkt):
            if IP in pkt:
                src = pkt.sprintf("%IP.src%")
                dst = pkt.sprintf("%IP.dst%")
                size = pkt.sprintf("%IP.len%")

                traffic[src] = 0 if src not in traffic else traffic[src] + int(size)
                traffic[dst] = 0 if dst not in traffic else traffic[dst] + int(size)

        sniff(iface=interface, prn=traffic_monitor_callbak, store=0, timeout=sample_interval)
        # sort by total bytes, descending
        traffic_sorted = sorted(traffic.items(), key=lambda x: x[1], reverse=True)
        clear()

        for data in traffic_sorted:
            src, host_total = data
            if not re.search(ipfilter, src):
                continue
            
            if gethostname:
                try:
                    src_name = socket.gethostbyaddr(src)[0]
                except:
                    pass

            print(f"{src}\t: {human(host_total)}" + (f" ({src_name})" if gethostname else ""))

        if pool_interval == -1:
            break
        sleep(pool_interval)


if __name__ == '__main__':
    clear()
    print("""
Interfaces
==========
""")
    IFACES.show(True)
    print("""
""")
    main(
        interface="Intel(R) Wireless-AC 9560 160MHz",
        ipfilter=re_ip,
        gethostname=False,
        pool_interval=-1  # seconds
    )